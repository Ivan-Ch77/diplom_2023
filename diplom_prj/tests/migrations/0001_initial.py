# Generated by Django 4.2.3 on 2023-07-05 17:13

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0005_auto_20220424_2025'),
    ]

    operations = [
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=256)),
                ('slug', models.CharField(default='', max_length=256)),
                ('score_to_pass', models.PositiveSmallIntegerField(default=80, help_text='score in percentages', validators=[django.core.validators.MaxValueValidator(limit_value=100)], verbose_name='Required score to pass')),
                ('experience', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(limit_value=3)])),
                ('prog_language', models.CharField(choices=[('PY', 'Python'), ('JS', 'JavaScript'), ('HTML', 'HTML'), ('SQL', 'SQL')], default='PY', max_length=4, verbose_name='Programming language')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('DF', 'Draft'), ('PB', 'Published')], default='DF', max_length=2, verbose_name='Test status')),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='tests', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name_plural': 'Tests',
                'ordering': ['-publish'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passed', models.BooleanField(default=False)),
                ('score', models.PositiveSmallIntegerField(default=0)),
                ('exp_gain', models.PositiveSmallIntegerField(default=0)),
                ('pass_date', models.DateTimeField(auto_now=True)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.test')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_result', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Results',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.CharField(default='', max_length=256)),
                ('answer_type', models.CharField(choices=[('SC', 'single choice'), ('MC', 'multiple choice'), ('WR', 'write in')], default='SC', max_length=2, verbose_name='Answer type')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='tests.test')),
            ],
            options={
                'verbose_name_plural': 'Questions',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='can use markdown')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codes', to='tests.question')),
            ],
            options={
                'verbose_name_plural': 'Codes',
                'ordering': ['question'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=128)),
                ('correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='tests.question')),
            ],
            options={
                'verbose_name_plural': 'Answers',
                'ordering': ['question'],
            },
        ),
        migrations.AddIndex(
            model_name='test',
            index=models.Index(fields=['-publish'], name='tests_test_publish_6033f4_idx'),
        ),
    ]
